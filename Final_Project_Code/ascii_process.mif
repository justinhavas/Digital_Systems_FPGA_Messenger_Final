-- null
DEPTH = 4096;
WIDTH = 32;

ADDRESS_RADIX = DEC;
DATA_RADIX = BIN;

CONTENT
BEGIN
    -- addi $r16, $r0, 0
0000 : 00101100000000000000000000000000;
    -- addi $r17, $r0, 1
0001 : 00101100010000000000000000000001;
    -- addi $r20, $r0, 63 # x-limit
0002 : 00101101000000000000000000111111;
    -- addi $r21, $r0, 47 # y-limit
0003 : 00101101010000000000000000101111;
    -- addi $r15, $r0, 0
0004 : 00101011110000000000000000000000;
    -- bne $r15, $r0, 2 #r15 is ready register
0005 : 00010011110000000000000000000010;
    -- chReady #READ in Ascii and put in reg15 NEW INSTRUCTION, needs to write into register from line
0006 : 01001000000000000000000000000000;
    -- j 5 # change to bne expression
0007 : 00001000000000000000000000000101;
    -- chEnter #write value into reg14 NEW INSTRUCTION, needs to write into register from a line
0008 : 01010000000000000000000000000000;
    -- bne $r14, $r0, 6 # do different command if an enter signal
0009 : 00010011100000000000000000000110;
    -- addi $r16, $r16, 1 # x-coordinate
0010 : 00101100001000000000000000000001;
    -- blt $r20, $r16, 4 # check if x-coordinate off screen
0011 : 00110101001000000000000000000100;
    -- outCor $r16, $r17 # output x and y-coordinate NEW INSTRUCTION reading from reg and outputs in execute
0012 : 01011100001000100000000000000000;
    -- resReady # NEW INSTRUCTION opcode and all zeroes, check opcode in execute
0013 : 01100000000000000000000000000000;
    -- addi $r15, $r0, 0
0014 : 00101011110000000000000000000000;
    -- j 5
0015 : 00001000000000000000000000000101;
    -- addi $r16, $r0, 1
0016 : 00101100000000000000000000000001;
    -- addi $r17, $r17, 1 # y-coordinate add to y
0017 : 00101100011000100000000000000001;
    -- blt $r21, $r17, 1
0018 : 00110101011000100000000000000001;
    -- j 12 # go output new values
0019 : 00001000000000000000000000001100;
    -- addi $r17, $r0, 1 # this is at weird edge not sure what to do yet
0020 : 00101100010000000000000000000001;
    -- j 12
0021 : 00001000000000000000000000001100;
[0022 .. 4095] : 00000000000000000000000000000000;
END;
