-- null
DEPTH = 4096;
WIDTH = 32;

ADDRESS_RADIX = DEC;
DATA_RADIX = BIN;

CONTENT
BEGIN
    -- addi $r16, $r0, 0
0000 : 00101100000000000000000000000000;
    -- addi $r17, $r0, 1
0001 : 00101100010000000000000000000001;
    -- addi $r20, $r0, 49 # x-limit
0002 : 00101101000000000000000000110001;
    -- addi $r21, $r0, 39 # y-limit
0003 : 00101101010000000000000000100111;
    -- addi $r15, $r0, 0
0004 : 00101011110000000000000000000000;
    -- chReady #READ in Ascii and put in reg15 NEW INSTRUCTION, needs to write into register from line
0005 : 01001000000000000000000000000000;
    -- bne $r15, $r0, 3 #r15 is ready register
0006 : 00010011110000000000000000000011;
    -- chReceiving # CUSTOM instruction to see if receiving data to reg 19
0007 : 10000000000000000000000000000000;
    -- bne $r19, $r0, receiving
0008 : 00010100110000000000000001100011;
    -- j 5 # change to bne expression
0009 : 00001000000000000000000000000101;
    -- chEnter #write value into reg14 NEW INSTRUCTION, needs to write into register from a line
0010 : 01010000000000000000000000000000;
    -- bne $r14, $r0, 36 # if an enter signal will do differently 
0011 : 00010011100000000000000000100100;
    -- addi $r16, $r16, 1 # x-coordinate
0012 : 00101100001000000000000000000001;
    -- blt $r20, $r16, 5 # check if x-coordinate off screen FIX THIS
0013 : 00110101001000000000000000000101;
    -- outCor $r16, $r17 # output x and y-coordinate NEW INSTRUCTION reading from reg and outputs in execute
0014 : 01011100001000100000000000000000;
    -- jal 25
0015 : 00011000000000000000000000011001;
    -- resReady # NEW INSTRUCTION opcode and all zeroes, check opcode in execute
0016 : 01100000000000000000000000000000;
    -- addi $r15, $r0, 0
0017 : 00101011110000000000000000000000;
    -- j 5
0018 : 00001000000000000000000000000101;
    -- addi $r16, $r0, 1
0019 : 00101100000000000000000000000001;
    -- addi $r17, $r17, 1 # y-coordinate add to y
0020 : 00101100011000100000000000000001;
    -- blt $r21, $r17, 1
0021 : 00110101011000100000000000000001;
    -- j 14 # go output new values
0022 : 00001000000000000000000000001110;
    -- addi $r17, $r0, 1 # this is at weird edge not sure what to do yet
0023 : 00101100010000000000000000000001;
    -- j 14 ###  to new code
0024 : 00001000000000000000000000001110;
    -- custom load ascii into reg 25
0025 : 01101000000000000000000000000000;
    -- addi $r28, $r0, 1 # for calculating if at first byte of address
0026 : 00101111000000000000000000000001;
    -- sub $r28, $r28, $r22
0027 : 00000111001110010110000000000100;
    -- blt $r0, $r28, 10 # if not at first term in block, don't lw
0028 : 00110000001110000000000000001010;
    -- lw $r24, 0($r23) # load characters stored at the address
0029 : 01000110001011100000000000000000;
    -- addi $r28, $r0, 2 
0030 : 00101111000000000000000000000010;
    -- blt $r28, $r22, 11 # if at end of word
0031 : 00110111001011000000000000001011;
    -- addi $r28, $r0, 1
0032 : 00101111000000000000000000000001;
    -- blt $r28, $r22, 7
0033 : 00110111001011000000000000000111;
    -- sll $r25, $r25, 16 # shift if at position 1
0034 : 00000110011100100000100000010000;
    -- or $r24, $r24, $r25 
0035 : 00000110001100011001000000001100;
    -- sw $r24, 0($r23) # sw instructin with new ascii
0036 : 00111110001011100000000000000000;
    -- addi $r22, $r22, 1 # this is counter
0037 : 00101101101011000000000000000001;
    -- jr $r31 
0038 : 00100111110000000000000000000000;
    -- sll $r24, $r25, 24 # shift for position 0
0039 : 00000110001100100000110000010000;
    -- j 36
0040 : 00001000000000000000000000100100;
    -- sll $r25, $r25, 8 # shift for position 2
0041 : 00000110011100100000010000010000;
    -- j 35 
0042 : 00001000000000000000000000100011;
    -- or $r24, $r24, $r25 
0043 : 00000110001100011001000000001100;
    -- sw $r24, 0($r23) 
0044 : 00111110001011100000000000000000;
    -- addi $r22, $r0, 0
0045 : 00101101100000000000000000000000;
    -- addi $r23, $r23, 1 # this will hold the reg address
0046 : 00101101111011100000000000000001;
    -- jr $r31 ##### dealing with enter signals from wayyyy earlier
0047 : 00100111110000000000000000000000;
    -- jal 25
0048 : 00011000000000000000000000011001;
    -- addi $r16, $r0, 0
0049 : 00101100000000000000000000000000;
    -- addi $r17, $r17, 1 # y-coordinate add to y
0050 : 00101100011000100000000000000001;
    -- blt $r21, $r17, 3
0051 : 00110101011000100000000000000011;
    -- jal autocorrectWholeMessage
0052 : 00011000000000000000000010001000;
    -- jal transmit
0053 : 00011000000000000000000000111011;
    -- j 16 # go store enter
0054 : 00001000000000000000000000010000;
    -- addi $r17, $r0, 1 #ADD AUTO CORRECT HERE
0055 : 00101100010000000000000000000001;
    -- jal autocorrectWholeMessage
0056 : 00011000000000000000000010001000;
    -- jal transmit
0057 : 00011000000000000000000000111011;
    -- j 16 #### start transmitting
0058 : 00001000000000000000000000010000;
    -- transmit: nop
0059 : 00000000000000000000000000000000;
    -- bne $r18, $r0, 2 # make sure to pass in the negative of transmitting signal as notifyer 
0060 : 00010100100000000000000000000010;
    -- chTransmit # that goes to $r18, 
0061 : 01110000000000000000000000000000;
    -- j transmit
0062 : 00001000000000000000000000111011;
    -- addi $r29, $r0, 10 
0063 : 00101111010000000000000000001010;
    -- addi $r19, $r0, 0
0064 : 00101100110000000000000000000000;
    -- lw $r24, 0($r27)
0065 : 01000110001101100000000000000000;
    -- addi $r28, $r0, 2 
0066 : 00101111000000000000000000000010;
    -- blt $r28, $r26, 25 # check if at end of word
0067 : 00110111001101000000000000011001;
    -- addi $r28, $r0, 1 
0068 : 00101111000000000000000000000001;
    -- blt $r28, $r26, 18 # check if pos 2
0069 : 00110111001101000000000000010010;
    -- addi $r28, $r0, 0 
0070 : 00101111000000000000000000000000;
    -- blt $r28, $r26, 11 # check if pos 1
0071 : 00110111001101000000000000001011;
    -- addi $r28, $r0, 255 # at this point, in zero pos
0072 : 00101111000000000000000011111111;
    -- sll $r28, $r28, 24 # shift if at position 0
0073 : 00000111001110000000110000010000;
    -- and $r28, $r28, $r24 # these pull out digits wanted
0074 : 00000111001110011000000000001000;
    -- addi $r19, $r0, 1
0075 : 00101100110000000000000000000001;
    -- bne $r19, $r0, 21
0076 : 00010100110000000000000000010101;
    -- outTrasmit # which outputs to special register 28, 
0077 : 01111000000000000000000000000000;
    -- addi $r26, $r26, 1 # address of subaddress, r27 holds the address
0078 : 00101110101101000000000000000001;
    -- j waitTransmit 
0079 : 00001000000000000000000001100100;
    -- bne $r28, $r29, 1 # see if enter is outputted
0080 : 00010111001110100000000000000001;
    -- jr $r31
0081 : 00100111110000000000000000000000;
    -- j transmit 
0082 : 00001000000000000000000000111011;
    -- addi $r28, $r0, 255
0083 : 00101111000000000000000011111111;
    -- sll $r28, $r28, 16 # shift if at position 1
0084 : 00000111001110000000100000010000;
    -- and $r28, $r28, $r24
0085 : 00000111001110011000000000001000;
    -- sra $r28, $r28, 16
0086 : 00000111001110000000100000010100;
    -- j 77
0087 : 00001000000000000000000001001101;
    -- addi $r28, $r0, 255
0088 : 00101111000000000000000011111111;
    -- sll $r28, $r28, 8 # shift if at position 2
0089 : 00000111001110000000010000010000;
    -- and $r28, $r28, $r24
0090 : 00000111001110011000000000001000;
    -- sra $r28, $r28, 8
0091 : 00000111001110000000010000010100;
    -- j 77
0092 : 00001000000000000000000001001101;
    -- addi $r28, $r0, 255
0093 : 00101111000000000000000011111111;
    -- and $r28, $r28, $r24 # at end of word
0094 : 00000111001110011000000000001000;
    -- addi $r26, $r0, -1
0095 : 00101110100000011111111111111111;
    -- addi $r27, $r27, 1
0096 : 00101110111101100000000000000001;
    -- j 77
0097 : 00001000000000000000000001001101;
    -- sra $r28, $r28, 24
0098 : 00000111001110000000110000010100;
    -- j 77
0099 : 00001000000000000000000001001101;
    -- waitTransmit: nop
0100 : 00000000000000000000000000000000;
    -- addi $r19, $r0, 1
0101 : 00101100110000000000000000000001;
    -- blt $r18, $r19, 2 # wait until transmit ready is 0 
0102 : 00110100101001100000000000000010;
    -- chTransmit #that goes to $r18, ADD EXTRA LOGIC like the press down so flag not turned on
0103 : 01110000000000000000000000000000;
    -- j waitTransmit
0104 : 00001000000000000000000001100100;
    -- addi $r18, $r0, 0 
0105 : 00101100100000000000000000000000;
    -- addi $r19, $r0, 0
0106 : 00101100110000000000000000000000;
    -- j 80
0107 : 00001000000000000000000001010000;
    -- receiving: nop
0108 : 00000000000000000000000000000000;
    -- addi $r29, $r0, 10
0109 : 00101111010000000000000000001010;
    -- chReceivingCharacter another NEW instruction into reg 28
0110 : 10001000000000000000000000000000;
    -- bne $r28, $r29, 3
0111 : 00010111001110100000000000000011;
    -- addi $r16, $r0, 0
0112 : 00101100000000000000000000000000;
    -- addi $r17, $r17, 1
0113 : 00101100011000100000000000000001;
    -- j 118
0114 : 00001000000000000000000001110110;
    -- addi $r16, $r16, 1
0115 : 00101100001000000000000000000001;
    -- blt $r20, $r16, 7
0116 : 00110101001000000000000000000111;
    -- outCor $r16, $r17 to the allAscii Reg, use character is reg 28
0117 : 01011100001000100000000000000000;
    -- addi $r29, $r0, 1
0118 : 00101111010000000000000000000001;
    -- chReceiving which updates register 19
0119 : 10000000000000000000000000000000;
    -- blt $r19, $r29, 1 # wait until receiving ready is 0
0120 : 00110100111110100000000000000001;
    -- j 119
0121 : 00001000000000000000000001110111;
    -- addi $r19, $r0, 0
0122 : 00101100110000000000000000000000;
    -- j 5
0123 : 00001000000000000000000000000101;
    -- addi $r16, $r0, 1
0124 : 00101100000000000000000000000001;
    -- addi $r17, $r17, 1 
0125 : 00101100011000100000000000000001;
    -- blt $r21, $r17, 1
0126 : 00110101011000100000000000000001;
    -- j 117 # go output new values
0127 : 00001000000000000000000001110101;
    -- addi $r17, $r0, 1 # this is at weird edge not sure what to do yet
0128 : 00101100010000000000000000000001;
    -- j 117 
0129 : 00001000000000000000000001110101;


[0130 .. 0135] : 00000000000000000000000000000000;


    -- autocorrectWholeMessage: nop
0136 : 00000000000000000000000000000000;
    -- nop
0137 : 00000000000000000000000000000000;
    -- nop
0138 : 00000000000000000000000000000000;
    -- nop
0139 : 00000000000000000000000000000000;
    -- nop
0140 : 00000000000000000000000000000000;
    -- nop
0141 : 00000000000000000000000000000000;
    -- nop
0142 : 00000000000000000000000000000000;
    -- nop
0143 : 00000000000000000000000000000000;
    -- nop
0144 : 00000000000000000000000000000000;
    -- sw $ra, 4089($0)
0145 : 00111111110000000000111111111001;
    -- nop
0146 : 00000000000000000000000000000000;
    -- nop
0147 : 00000000000000000000000000000000;
    -- nop
0148 : 00000000000000000000000000000000;
    -- nop
0149 : 00000000000000000000000000000000;
    -- nop
0150 : 00000000000000000000000000000000;
    -- nop
0151 : 00000000000000000000000000000000;
    -- nop
0152 : 00000000000000000000000000000000;
    -- nop
0153 : 00000000000000000000000000000000;
    -- nop
0154 : 00000000000000000000000000000000;
    -- nop
0155 : 00000000000000000000000000000000;
    -- nop
0156 : 00000000000000000000000000000000;
    -- nop
0157 : 00000000000000000000000000000000;
    -- nop
0158 : 00000000000000000000000000000000;
    -- nop
0159 : 00000000000000000000000000000000;
    -- nop
0160 : 00000000000000000000000000000000;
    -- nop
0161 : 00000000000000000000000000000000;
    -- sw $26, 4090($0)
0162 : 00111110100000000000111111111010;
    -- nop
0163 : 00000000000000000000000000000000;
    -- nop
0164 : 00000000000000000000000000000000;
    -- nop
0165 : 00000000000000000000000000000000;
    -- nop
0166 : 00000000000000000000000000000000;
    -- nop
0167 : 00000000000000000000000000000000;
    -- nop
0168 : 00000000000000000000000000000000;
    -- nop
0169 : 00000000000000000000000000000000;
    -- nop
0170 : 00000000000000000000000000000000;
    -- nop
0171 : 00000000000000000000000000000000;
    -- nop
0172 : 00000000000000000000000000000000;
    -- nop
0173 : 00000000000000000000000000000000;
    -- nop
0174 : 00000000000000000000000000000000;
    -- nop
0175 : 00000000000000000000000000000000;
    -- nop
0176 : 00000000000000000000000000000000;
    -- nop
0177 : 00000000000000000000000000000000;
    -- nop
0178 : 00000000000000000000000000000000;
    -- sw $27, 4091($0)
0179 : 00111110110000000000111111111011;
    -- nop
0180 : 00000000000000000000000000000000;
    -- nop
0181 : 00000000000000000000000000000000;
    -- nop
0182 : 00000000000000000000000000000000;
    -- nop
0183 : 00000000000000000000000000000000;
    -- nop
0184 : 00000000000000000000000000000000;
    -- nop
0185 : 00000000000000000000000000000000;
    -- nop
0186 : 00000000000000000000000000000000;
    -- nop
0187 : 00000000000000000000000000000000;
    -- beginAutoCorrectingWholeMessage: nop
0188 : 00000000000000000000000000000000;
    -- addi $1, $27, 0 #$27 points to the address of the word to be autocorrected
0189 : 00101000011101100000000000000000;
    -- addi $2, $26, 0 #26 points to the sub-address of the word to be autocorrected
0190 : 00101000101101000000000000000000;
    -- jal autocorrect
0191 : 00011000000000000000000101011101;
    -- incrementLetterPointer: nop
0192 : 00000000000000000000000000000000;
    -- addi $8, $0, 3
0193 : 00101010000000000000000000000011;
    -- blt $26, $8, justIncrementr26
0194 : 00110110100100000000000000000011;
    -- addi $26, $0, 0
0195 : 00101110100000000000000000000000;
    -- addi $27, $27, 1
0196 : 00101110111101100000000000000001;
    -- j doneIncrementingLetterPointer
0197 : 00001000000000000000000011001000;
    -- justIncrementr26: nop
0198 : 00000000000000000000000000000000;
    -- addi $26, $26, 1
0199 : 00101110101101000000000000000001;
    -- doneIncrementingLetterPointer: nop
0200 : 00000000000000000000000000000000;
    -- addi $4, $0, 255
0201 : 00101001000000000000000011111111;
    -- bne $3, $4, reg3NotEqual255
0202 : 00010000110010000000000000000010;
    -- addi $3, $0, 0
0203 : 00101000110000000000000000000000;
    -- j beginAutoCorrectingWholeMessage
0204 : 00001000000000000000000010111100;
    -- reg3NotEqual255: nop
0205 : 00000000000000000000000000000000;
    -- addi $4, $0, 1
0206 : 00101001000000000000000000000001;
    -- blt $26, $4, reg26IsAt0
0207 : 00110110100010000000000000000110;
    -- addi $4, $0, 2
0208 : 00101001000000000000000000000010;
    -- blt $26, $4, reg26IsAt1
0209 : 00110110100010000000000000010111;
    -- addi $4, $0, 3
0210 : 00101001000000000000000000000011;
    -- blt $26, $4, reg26IsAt2
0211 : 00110110100010000000000000101000;
    -- addi $4, $0, 4
0212 : 00101001000000000000000000000100;
    -- blt $26, $4, reg26IsAt3
0213 : 00110110100010000000000000111001;
    -- reg26IsAt0: nop
0214 : 00000000000000000000000000000000;
    -- addi $4, $0, 255
0215 : 00101001000000000000000011111111;
    -- sll $4, $4, 24
0216 : 00000001000010000000110000010000;
    -- nop
0217 : 00000000000000000000000000000000;
    -- nop
0218 : 00000000000000000000000000000000;
    -- nop
0219 : 00000000000000000000000000000000;
    -- nop
0220 : 00000000000000000000000000000000;
    -- nop
0221 : 00000000000000000000000000000000;
    -- lw $3, 0($27)
0222 : 01000000111101100000000000000000;
    -- nop
0223 : 00000000000000000000000000000000;
    -- nop
0224 : 00000000000000000000000000000000;
    -- nop
0225 : 00000000000000000000000000000000;
    -- nop
0226 : 00000000000000000000000000000000;
    -- nop
0227 : 00000000000000000000000000000000;
    -- and $3, $3, $4
0228 : 00000000110001100100000000001000;
    -- sra $3, $3, 24
0229 : 00000000110001100000110000010100;
    -- addi $4, $0, 255
0230 : 00101001000000000000000011111111;
    -- and $3, $3, $4
0231 : 00000000110001100100000000001000;
    -- j readyToCheckLetter
0232 : 00001000000000000000000100011101;
    -- reg26IsAt1: nop
0233 : 00000000000000000000000000000000;
    -- addi $4, $0, 255
0234 : 00101001000000000000000011111111;
    -- sll $4, $4, 16
0235 : 00000001000010000000100000010000;
    -- nop
0236 : 00000000000000000000000000000000;
    -- nop
0237 : 00000000000000000000000000000000;
    -- nop
0238 : 00000000000000000000000000000000;
    -- nop
0239 : 00000000000000000000000000000000;
    -- nop
0240 : 00000000000000000000000000000000;
    -- lw $3, 0($27)
0241 : 01000000111101100000000000000000;
    -- nop
0242 : 00000000000000000000000000000000;
    -- nop
0243 : 00000000000000000000000000000000;
    -- nop
0244 : 00000000000000000000000000000000;
    -- nop
0245 : 00000000000000000000000000000000;
    -- nop
0246 : 00000000000000000000000000000000;
    -- and $3, $3, $4
0247 : 00000000110001100100000000001000;
    -- sra $3, $3, 16
0248 : 00000000110001100000100000010100;
    -- addi $4, $0, 255
0249 : 00101001000000000000000011111111;
    -- and $3, $3, $4
0250 : 00000000110001100100000000001000;
    -- j readyToCheckLetter
0251 : 00001000000000000000000100011101;
    -- reg26IsAt2: nop
0252 : 00000000000000000000000000000000;
    -- addi $4, $0, 255
0253 : 00101001000000000000000011111111;
    -- sll $4, $4, 8
0254 : 00000001000010000000010000010000;
    -- nop
0255 : 00000000000000000000000000000000;
    -- nop
0256 : 00000000000000000000000000000000;
    -- nop
0257 : 00000000000000000000000000000000;
    -- nop
0258 : 00000000000000000000000000000000;
    -- nop
0259 : 00000000000000000000000000000000;
    -- lw $3, 0($27)
0260 : 01000000111101100000000000000000;
    -- nop
0261 : 00000000000000000000000000000000;
    -- nop
0262 : 00000000000000000000000000000000;
    -- nop
0263 : 00000000000000000000000000000000;
    -- nop
0264 : 00000000000000000000000000000000;
    -- nop
0265 : 00000000000000000000000000000000;
    -- and $3, $3, $4
0266 : 00000000110001100100000000001000;
    -- sra $3, $3, 8
0267 : 00000000110001100000010000010100;
    -- addi $4, $0, 255
0268 : 00101001000000000000000011111111;
    -- and $3, $3, $4
0269 : 00000000110001100100000000001000;
    -- j readyToCheckLetter
0270 : 00001000000000000000000100011101;
    -- reg26IsAt3: nop
0271 : 00000000000000000000000000000000;
    -- addi $4, $0, 255
0272 : 00101001000000000000000011111111;
    -- nop
0273 : 00000000000000000000000000000000;
    -- nop
0274 : 00000000000000000000000000000000;
    -- nop
0275 : 00000000000000000000000000000000;
    -- nop
0276 : 00000000000000000000000000000000;
    -- nop
0277 : 00000000000000000000000000000000;
    -- lw $3, 0($27)
0278 : 01000000111101100000000000000000;
    -- nop
0279 : 00000000000000000000000000000000;
    -- nop
0280 : 00000000000000000000000000000000;
    -- nop
0281 : 00000000000000000000000000000000;
    -- nop
0282 : 00000000000000000000000000000000;
    -- nop
0283 : 00000000000000000000000000000000;
    -- and $3, $3, $4
0284 : 00000000110001100100000000001000;
    -- readyToCheckLetter: nop
0285 : 00000000000000000000000000000000;
    -- addi $8, $0, 31
0286 : 00101010000000000000000000011111;
    -- blt $3, $8, isEnter
0287 : 00110000110100000000000000000110;
    -- addi $8, $0, 33
0288 : 00101010000000000000000000100001;
    -- blt $3, $8, isSpace
0289 : 00110000110100000000000000000001;
    -- j incrementLetterPointer
0290 : 00001000000000000000000011000000;
    -- isSpace: nop
0291 : 00000000000000000000000000000000;
    -- addi $3, $0, 255
0292 : 00101000110000000000000011111111;
    -- j incrementLetterPointer
0293 : 00001000000000000000000011000000;
    -- isEnter: nop
0294 : 00000000000000000000000000000000;
    -- j returnAutoCorrectWholeMessage
0295 : 00001000000000000000000100101000;
    -- returnAutoCorrectWholeMessage: nop
0296 : 00000000000000000000000000000000;
    -- nop
0297 : 00000000000000000000000000000000;
    -- nop
0298 : 00000000000000000000000000000000;
    -- nop
0299 : 00000000000000000000000000000000;
    -- nop
0300 : 00000000000000000000000000000000;
    -- nop
0301 : 00000000000000000000000000000000;
    -- nop
0302 : 00000000000000000000000000000000;
    -- nop
0303 : 00000000000000000000000000000000;
    -- nop
0304 : 00000000000000000000000000000000;
    -- lw $26, 4090($0)
0305 : 01000110100000000000111111111010;
    -- nop
0306 : 00000000000000000000000000000000;
    -- nop
0307 : 00000000000000000000000000000000;
    -- nop
0308 : 00000000000000000000000000000000;
    -- nop
0309 : 00000000000000000000000000000000;
    -- nop
0310 : 00000000000000000000000000000000;
    -- nop
0311 : 00000000000000000000000000000000;
    -- nop
0312 : 00000000000000000000000000000000;
    -- nop
0313 : 00000000000000000000000000000000;
    -- nop
0314 : 00000000000000000000000000000000;
    -- nop
0315 : 00000000000000000000000000000000;
    -- nop
0316 : 00000000000000000000000000000000;
    -- nop
0317 : 00000000000000000000000000000000;
    -- nop
0318 : 00000000000000000000000000000000;
    -- nop
0319 : 00000000000000000000000000000000;
    -- nop
0320 : 00000000000000000000000000000000;
    -- nop
0321 : 00000000000000000000000000000000;
    -- lw $27, 4091($0)
0322 : 01000110110000000000111111111011;
    -- nop
0323 : 00000000000000000000000000000000;
    -- nop
0324 : 00000000000000000000000000000000;
    -- nop
0325 : 00000000000000000000000000000000;
    -- nop
0326 : 00000000000000000000000000000000;
    -- nop
0327 : 00000000000000000000000000000000;
    -- nop
0328 : 00000000000000000000000000000000;
    -- nop
0329 : 00000000000000000000000000000000;
    -- nop
0330 : 00000000000000000000000000000000;
    -- nop
0331 : 00000000000000000000000000000000;
    -- nop
0332 : 00000000000000000000000000000000;
    -- nop
0333 : 00000000000000000000000000000000;
    -- nop
0334 : 00000000000000000000000000000000;
    -- nop
0335 : 00000000000000000000000000000000;
    -- nop
0336 : 00000000000000000000000000000000;
    -- nop
0337 : 00000000000000000000000000000000;
    -- nop
0338 : 00000000000000000000000000000000;
    -- lw $ra, 4089($0)
0339 : 01000111110000000000111111111001;
    -- nop
0340 : 00000000000000000000000000000000;
    -- nop
0341 : 00000000000000000000000000000000;
    -- nop
0342 : 00000000000000000000000000000000;
    -- nop
0343 : 00000000000000000000000000000000;
    -- nop
0344 : 00000000000000000000000000000000;
    -- nop
0345 : 00000000000000000000000000000000;
    -- nop
0346 : 00000000000000000000000000000000;
    -- nop
0347 : 00000000000000000000000000000000;
    -- jr $ra
0348 : 00100111110000000000000000000000;
    -- autocorrect: nop
0349 : 00000000000000000000000000000000;
    -- nop
0350 : 00000000000000000000000000000000;
    -- nop
0351 : 00000000000000000000000000000000;
    -- nop
0352 : 00000000000000000000000000000000;
    -- nop
0353 : 00000000000000000000000000000000;
    -- nop
0354 : 00000000000000000000000000000000;
    -- nop
0355 : 00000000000000000000000000000000;
    -- nop
0356 : 00000000000000000000000000000000;
    -- nop
0357 : 00000000000000000000000000000000;
    -- sw $ra, 4088($0)
0358 : 00111111110000000000111111111000;
    -- nop
0359 : 00000000000000000000000000000000;
    -- nop
0360 : 00000000000000000000000000000000;
    -- nop
0361 : 00000000000000000000000000000000;
    -- nop
0362 : 00000000000000000000000000000000;
    -- nop
0363 : 00000000000000000000000000000000;
    -- nop
0364 : 00000000000000000000000000000000;
    -- nop
0365 : 00000000000000000000000000000000;
    -- nop
0366 : 00000000000000000000000000000000;
    -- addi $10, $0, 2048
0367 : 00101010100000000000100000000000;
    -- addi $11, $1, 0
0368 : 00101010110000100000000000000000;
    -- addi $12, $2, 0
0369 : 00101011000001000000000000000000;
    -- addi $3, $10, 0
0370 : 00101000110101000000000000000000;
    -- addi $4, $0, 0
0371 : 00101001000000000000000000000000;
    -- addi $5, $0, 0
0372 : 00101001010000000000000000000000;
    -- checkWord: nop
0373 : 00000000000000000000000000000000;
    -- jal numDifferences
0374 : 00011000000000000000000111001010;
    -- bne $5, $0, nonZeroDiffs
0375 : 00010001010000000000000000000010;
    -- addi $3, $0, 0
0376 : 00101000110000000000000000000000;
    -- j returnAutoCorrect
0377 : 00001000000000000000000110000000;
    -- nonZeroDiffs: nop
0378 : 00000000000000000000000000000000;
    -- addi $6, $0, 2
0379 : 00101001100000000000000000000010;
    -- blt $5, $6, oneDiff
0380 : 00110001010011000000000000000001;
    -- j goToNextWordInDict
0381 : 00001000000000000000000110010110;
    -- oneDiff: nop
0382 : 00000000000000000000000000000000;
    -- addi $3, $10, 0
0383 : 00101000110101000000000000000000;
    -- returnAutoCorrect: nop
0384 : 00000000000000000000000000000000;
    -- addi $1, $11, 0
0385 : 00101000010101100000000000000000;
    -- addi $2, $12, 0
0386 : 00101000100110000000000000000000;
    -- jal correctMemory
0387 : 00011000000000000000001001001111;
    -- nop
0388 : 00000000000000000000000000000000;
    -- nop
0389 : 00000000000000000000000000000000;
    -- nop
0390 : 00000000000000000000000000000000;
    -- nop
0391 : 00000000000000000000000000000000;
    -- nop
0392 : 00000000000000000000000000000000;
    -- nop
0393 : 00000000000000000000000000000000;
    -- nop
0394 : 00000000000000000000000000000000;
    -- nop
0395 : 00000000000000000000000000000000;
    -- lw $ra, 4088($0)
0396 : 01000111110000000000111111111000;
    -- nop
0397 : 00000000000000000000000000000000;
    -- nop
0398 : 00000000000000000000000000000000;
    -- nop
0399 : 00000000000000000000000000000000;
    -- nop
0400 : 00000000000000000000000000000000;
    -- nop
0401 : 00000000000000000000000000000000;
    -- nop
0402 : 00000000000000000000000000000000;
    -- nop
0403 : 00000000000000000000000000000000;
    -- nop
0404 : 00000000000000000000000000000000;
    -- jr $ra
0405 : 00100111110000000000000000000000;
    -- goToNextWordInDict: nop
0406 : 00000000000000000000000000000000;
    -- addi $5, $0, 4085
0407 : 00101001010000000000111111110101;
    -- bne $10, $5, nextWordExists
0408 : 00010010100010100000000000000010;
    -- addi $3, $0, 0
0409 : 00101000110000000000000000000000;
    -- j returnAutoCorrect
0410 : 00001000000000000000000110000000;
    -- nextWordExists: nop
0411 : 00000000000000000000000000000000;
    -- nop
0412 : 00000000000000000000000000000000;
    -- nop
0413 : 00000000000000000000000000000000;
    -- nop
0414 : 00000000000000000000000000000000;
    -- nop
0415 : 00000000000000000000000000000000;
    -- nop
0416 : 00000000000000000000000000000000;
    -- nop
0417 : 00000000000000000000000000000000;
    -- nop
0418 : 00000000000000000000000000000000;
    -- nop
0419 : 00000000000000000000000000000000;
    -- lw $5, 0($10)
0420 : 01000001010101000000000000000000;
    -- nop
0421 : 00000000000000000000000000000000;
    -- nop
0422 : 00000000000000000000000000000000;
    -- nop
0423 : 00000000000000000000000000000000;
    -- nop
0424 : 00000000000000000000000000000000;
    -- nop
0425 : 00000000000000000000000000000000;
    -- nop
0426 : 00000000000000000000000000000000;
    -- nop
0427 : 00000000000000000000000000000000;
    -- nop
0428 : 00000000000000000000000000000000;
    -- addi $10, $10, 1
0429 : 00101010100101000000000000000001;
    -- checkFourthChar: nop
0430 : 00000000000000000000000000000000;
    -- addi $6, $0, 255
0431 : 00101001100000000000000011111111;
    -- and $7, $5, $6
0432 : 00000001110010100110000000001000;
    -- bne $7, $0, checkThirdChar
0433 : 00010001110000000000000000000001;
    -- j foundNullChar
0434 : 00001000000000000000000111000001;
    -- checkThirdChar: nop
0435 : 00000000000000000000000000000000;
    -- sll $6, $6, 8
0436 : 00000001100011000000010000010000;
    -- and $7, $5, $6
0437 : 00000001110010100110000000001000;
    -- bne $7, $0, checkSecondChar
0438 : 00010001110000000000000000000001;
    -- j foundNullChar
0439 : 00001000000000000000000111000001;
    -- checkSecondChar: nop
0440 : 00000000000000000000000000000000;
    -- sll $6, $6, 8
0441 : 00000001100011000000010000010000;
    -- and $7, $5, $6
0442 : 00000001110010100110000000001000;
    -- bne $7, $0, checkFirstChar
0443 : 00010001110000000000000000000001;
    -- j foundNullChar
0444 : 00001000000000000000000111000001;
    -- checkFirstChar: nop
0445 : 00000000000000000000000000000000;
    -- sll $6, $6, 8
0446 : 00000001100011000000010000010000;
    -- and $7, $5, $6
0447 : 00000001110010100110000000001000;
    -- bne $7, $0, noNullChar
0448 : 00010001110000000000000000000111;
    -- foundNullChar: nop
0449 : 00000000000000000000000000000000;
    -- addi $1, $11, 0
0450 : 00101000010101100000000000000000;
    -- addi $2, $12, 0
0451 : 00101000100110000000000000000000;
    -- addi $3, $10, 0
0452 : 00101000110101000000000000000000;
    -- addi $4, $0, 0
0453 : 00101001000000000000000000000000;
    -- addi $5, $0, 0
0454 : 00101001010000000000000000000000;
    -- j checkWord
0455 : 00001000000000000000000101110101;
    -- noNullChar: nop
0456 : 00000000000000000000000000000000;
    -- j goToNextWordInDict
0457 : 00001000000000000000000110010110;
    -- numDifferences: nop
0458 : 00000000000000000000000000000000;
    -- addi $6, $0, 255
0459 : 00101001100000000000000011111111;
    -- nop
0460 : 00000000000000000000000000000000;
    -- nop
0461 : 00000000000000000000000000000000;
    -- nop
0462 : 00000000000000000000000000000000;
    -- nop
0463 : 00000000000000000000000000000000;
    -- nop
0464 : 00000000000000000000000000000000;
    -- nop
0465 : 00000000000000000000000000000000;
    -- nop
0466 : 00000000000000000000000000000000;
    -- nop
0467 : 00000000000000000000000000000000;
    -- lw $7, 0($1)
0468 : 01000001110000100000000000000000;
    -- nop
0469 : 00000000000000000000000000000000;
    -- nop
0470 : 00000000000000000000000000000000;
    -- nop
0471 : 00000000000000000000000000000000;
    -- nop
0472 : 00000000000000000000000000000000;
    -- nop
0473 : 00000000000000000000000000000000;
    -- nop
0474 : 00000000000000000000000000000000;
    -- nop
0475 : 00000000000000000000000000000000;
    -- nop
0476 : 00000000000000000000000000000000;
    -- addi $8, $0, 1
0477 : 00101010000000000000000000000001;
    -- blt $2, $8, aStartsAt0
0478 : 00110000100100000000000000000110;
    -- addi $8, $0, 2
0479 : 00101010000000000000000000000010;
    -- blt $2, $8, aStartsAt1
0480 : 00110000100100000000000000001100;
    -- addi $8, $0, 3
0481 : 00101010000000000000000000000011;
    -- blt $2, $8, aStartsAt2
0482 : 00110000100100000000000000010010;
    -- addi $8, $0, 4
0483 : 00101010000000000000000000000100;
    -- blt $2, $8, aStartsAt3
0484 : 00110000100100000000000000011000;
    -- aStartsAt0: nop
0485 : 00000000000000000000000000000000;
    -- sll $6, $6, 24
0486 : 00000001100011000000110000010000;
    -- and $6, $6, $7
0487 : 00000001100011000111000000001000;
    -- sra $6, $6, 24
0488 : 00000001100011000000110000010100;
    -- addi $8, $0, 255
0489 : 00101010000000000000000011111111;
    -- and $6, $6, $8
0490 : 00000001100011001000000000001000;
    -- addi $2, $2, 1
0491 : 00101000100001000000000000000001;
    -- j doneLoadingA
0492 : 00001000000000000000001000000011;
    -- aStartsAt1: nop
0493 : 00000000000000000000000000000000;
    -- sll $6, $6, 16
0494 : 00000001100011000000100000010000;
    -- and $6, $6, $7
0495 : 00000001100011000111000000001000;
    -- sra $6, $6, 16
0496 : 00000001100011000000100000010100;
    -- addi $8, $0, 255
0497 : 00101010000000000000000011111111;
    -- and $6, $6, $8
0498 : 00000001100011001000000000001000;
    -- addi $2, $2, 1
0499 : 00101000100001000000000000000001;
    -- j doneLoadingA
0500 : 00001000000000000000001000000011;
    -- aStartsAt2: nop
0501 : 00000000000000000000000000000000;
    -- sll $6, $6, 8
0502 : 00000001100011000000010000010000;
    -- and $6, $6, $7
0503 : 00000001100011000111000000001000;
    -- sra $6, $6, 8
0504 : 00000001100011000000010000010100;
    -- addi $8, $0, 255
0505 : 00101010000000000000000011111111;
    -- and $6, $6, $8
0506 : 00000001100011001000000000001000;
    -- addi $2, $2, 1
0507 : 00101000100001000000000000000001;
    -- j doneLoadingA
0508 : 00001000000000000000001000000011;
    -- aStartsAt3: nop
0509 : 00000000000000000000000000000000;
    -- and $6, $6, $7
0510 : 00000001100011000111000000001000;
    -- addi $8, $0, 255
0511 : 00101010000000000000000011111111;
    -- and $6, $6, $8
0512 : 00000001100011001000000000001000;
    -- addi $2, $0, 0
0513 : 00101000100000000000000000000000;
    -- addi $1, $1, 1
0514 : 00101000010000100000000000000001;
    -- doneLoadingA: nop
0515 : 00000000000000000000000000000000;
    -- addi $7, $0, 255
0516 : 00101001110000000000000011111111;
    -- nop
0517 : 00000000000000000000000000000000;
    -- nop
0518 : 00000000000000000000000000000000;
    -- nop
0519 : 00000000000000000000000000000000;
    -- nop
0520 : 00000000000000000000000000000000;
    -- nop
0521 : 00000000000000000000000000000000;
    -- nop
0522 : 00000000000000000000000000000000;
    -- nop
0523 : 00000000000000000000000000000000;
    -- nop
0524 : 00000000000000000000000000000000;
    -- lw $8, 0($3)
0525 : 01000010000001100000000000000000;
    -- nop
0526 : 00000000000000000000000000000000;
    -- nop
0527 : 00000000000000000000000000000000;
    -- nop
0528 : 00000000000000000000000000000000;
    -- nop
0529 : 00000000000000000000000000000000;
    -- nop
0530 : 00000000000000000000000000000000;
    -- nop
0531 : 00000000000000000000000000000000;
    -- nop
0532 : 00000000000000000000000000000000;
    -- nop
0533 : 00000000000000000000000000000000;
    -- addi $9, $0, 1
0534 : 00101010010000000000000000000001;
    -- blt $4, $9, bStartsAt0
0535 : 00110001000100100000000000000110;
    -- addi $9, $0, 2
0536 : 00101010010000000000000000000010;
    -- blt $4, $9, bStartsAt1
0537 : 00110001000100100000000000001100;
    -- addi $9, $0, 3
0538 : 00101010010000000000000000000011;
    -- blt $4, $9, bStartsAt2
0539 : 00110001000100100000000000010010;
    -- addi $9, $0, 4
0540 : 00101010010000000000000000000100;
    -- blt $4, $9, bStartsAt3
0541 : 00110001000100100000000000011000;
    -- bStartsAt0: nop
0542 : 00000000000000000000000000000000;
    -- sll $7, $7, 24
0543 : 00000001110011100000110000010000;
    -- and $7, $7, $8
0544 : 00000001110011101000000000001000;
    -- sra $7, $7, 24
0545 : 00000001110011100000110000010100;
    -- addi $9, $0, 255
0546 : 00101010010000000000000011111111;
    -- and $7, $7, $9
0547 : 00000001110011101001000000001000;
    -- addi $4, $4, 1
0548 : 00101001000010000000000000000001;
    -- j doneLoadingB
0549 : 00001000000000000000001000111100;
    -- bStartsAt1: nop
0550 : 00000000000000000000000000000000;
    -- sll $7, $7, 16
0551 : 00000001110011100000100000010000;
    -- and $7, $7, $8
0552 : 00000001110011101000000000001000;
    -- sra $7, $7, 16
0553 : 00000001110011100000100000010100;
    -- addi $9, $0, 255
0554 : 00101010010000000000000011111111;
    -- and $7, $7, $9
0555 : 00000001110011101001000000001000;
    -- addi $4, $4, 1
0556 : 00101001000010000000000000000001;
    -- j doneLoadingB
0557 : 00001000000000000000001000111100;
    -- bStartsAt2: nop
0558 : 00000000000000000000000000000000;
    -- sll $7, $7, 8
0559 : 00000001110011100000010000010000;
    -- and $7, $7, $8
0560 : 00000001110011101000000000001000;
    -- sra $7, $7, 8
0561 : 00000001110011100000010000010100;
    -- addi $9, $0, 255
0562 : 00101010010000000000000011111111;
    -- and $7, $7, $9
0563 : 00000001110011101001000000001000;
    -- addi $4, $4, 1
0564 : 00101001000010000000000000000001;
    -- j doneLoadingB
0565 : 00001000000000000000001000111100;
    -- bStartsAt3: nop
0566 : 00000000000000000000000000000000;
    -- and $7, $7, $8
0567 : 00000001110011101000000000001000;
    -- addi $9, $0, 255
0568 : 00101010010000000000000011111111;
    -- and $7, $7, $9
0569 : 00000001110011101001000000001000;
    -- addi $4, $0, 0
0570 : 00101001000000000000000000000000;
    -- addi $3, $3, 1
0571 : 00101000110001100000000000000001;
    -- doneLoadingB: nop
0572 : 00000000000000000000000000000000;
    -- bne $7, $0, bCharIsNotNull
0573 : 00010001110000000000000000000110;
    -- addi $8, $0, 33
0574 : 00101010000000000000000000100001;
    -- blt $6, $8, aAndBBothEnd
0575 : 00110001100100000000000000000010;
    -- addi $5, $0, 255
0576 : 00101001010000000000000011111111;
    -- jr $ra
0577 : 00100111110000000000000000000000;
    -- aAndBBothEnd: nop
0578 : 00000000000000000000000000000000;
    -- jr $ra
0579 : 00100111110000000000000000000000;
    -- bCharIsNotNull: nop
0580 : 00000000000000000000000000000000;
    -- addi $8, $0, 33
0581 : 00101010000000000000000000100001;
    -- blt $6, $8, bCharIsNotNullAndACharIsSpaceOrEnter
0582 : 00110001100100000000000000000101;
    -- bne $6, $7, aAndBAreDifferent
0583 : 00010001100011100000000000000001;
    -- j numDifferences
0584 : 00001000000000000000000111001010;
    -- aAndBAreDifferent: nop
0585 : 00000000000000000000000000000000;
    -- addi $5, $5, 1
0586 : 00101001010010100000000000000001;
    -- j numDifferences
0587 : 00001000000000000000000111001010;
    -- bCharIsNotNullAndACharIsSpaceOrEnter: nop
0588 : 00000000000000000000000000000000;
    -- addi $5, $0, 255
0589 : 00101001010000000000000011111111;
    -- jr $ra
0590 : 00100111110000000000000000000000;
    -- correctMemory: nop
0591 : 00000000000000000000000000000000;
    -- addi $4, $0, 0
0592 : 00101001000000000000000000000000;
    -- needToCorrectStart: nop
0593 : 00000000000000000000000000000000;
    -- bne $3, $0, needToCorrect
0594 : 00010000110000000000000000000001;
    -- jr $ra
0595 : 00100111110000000000000000000000;
    -- needToCorrect: nop
0596 : 00000000000000000000000000000000;
    -- nop
0597 : 00000000000000000000000000000000;
    -- nop
0598 : 00000000000000000000000000000000;
    -- nop
0599 : 00000000000000000000000000000000;
    -- nop
0600 : 00000000000000000000000000000000;
    -- nop
0601 : 00000000000000000000000000000000;
    -- nop
0602 : 00000000000000000000000000000000;
    -- nop
0603 : 00000000000000000000000000000000;
    -- nop
0604 : 00000000000000000000000000000000;
    -- lw $5, 0($3)
0605 : 01000001010001100000000000000000;
    -- nop
0606 : 00000000000000000000000000000000;
    -- nop
0607 : 00000000000000000000000000000000;
    -- nop
0608 : 00000000000000000000000000000000;
    -- nop
0609 : 00000000000000000000000000000000;
    -- nop
0610 : 00000000000000000000000000000000;
    -- nop
0611 : 00000000000000000000000000000000;
    -- nop
0612 : 00000000000000000000000000000000;
    -- nop
0613 : 00000000000000000000000000000000;
    -- addi $6, $0, 255
0614 : 00101001100000000000000011111111;
    -- addi $9, $0, 1
0615 : 00101010010000000000000000000001;
    -- blt $4, $9, needToCorrectBStartsAt0
0616 : 00110001000100100000000000000110;
    -- addi $9, $0, 2
0617 : 00101010010000000000000000000010;
    -- blt $4, $9, needToCorrectBStartsAt1
0618 : 00110001000100100000000000001100;
    -- addi $9, $0, 3
0619 : 00101010010000000000000000000011;
    -- blt $4, $9, needToCorrectBStartsAt2
0620 : 00110001000100100000000000010000;
    -- addi $9, $0, 4
0621 : 00101010010000000000000000000100;
    -- blt $4, $9, needToCorrectBStartsAt3
0622 : 00110001000100100000000000010100;
    -- needToCorrectBStartsAt0: nop
0623 : 00000000000000000000000000000000;
    -- sll $6, $6, 24
0624 : 00000001100011000000110000010000;
    -- and $5, $5, $6
0625 : 00000001010010100110000000001000;
    -- sra $5, $5, 24
0626 : 00000001010010100000110000010100;
    -- addi $6, $0, 255
0627 : 00101001100000000000000011111111;
    -- and $5, $5, $6
0628 : 00000001010010100110000000001000;
    -- addi $4, $4, 1
0629 : 00101001000010000000000000000001;
    -- j needToCorrectDoneLoadingB
0630 : 00001000000000000000001010000111;
    -- needToCorrectBStartsAt1: nop
0631 : 00000000000000000000000000000000;
    -- sll $6, $6, 16
0632 : 00000001100011000000100000010000;
    -- and $5, $5, $6
0633 : 00000001010010100110000000001000;
    -- sra $5, $5, 16
0634 : 00000001010010100000100000010100;
    -- addi $4, $4, 1
0635 : 00101001000010000000000000000001;
    -- j needToCorrectDoneLoadingB
0636 : 00001000000000000000001010000111;
    -- needToCorrectBStartsAt2: nop
0637 : 00000000000000000000000000000000;
    -- sll $6, $6, 8
0638 : 00000001100011000000010000010000;
    -- and $5, $5, $6
0639 : 00000001010010100110000000001000;
    -- sra $5, $5, 8
0640 : 00000001010010100000010000010100;
    -- addi $4, $4, 1
0641 : 00101001000010000000000000000001;
    -- j needToCorrectDoneLoadingB
0642 : 00001000000000000000001010000111;
    -- needToCorrectBStartsAt3: nop
0643 : 00000000000000000000000000000000;
    -- and $5, $5, $6
0644 : 00000001010010100110000000001000;
    -- addi $3, $1, 1
0645 : 00101000110000100000000000000001;
    -- addi $4, $0, 0
0646 : 00101001000000000000000000000000;
    -- needToCorrectDoneLoadingB: nop
0647 : 00000000000000000000000000000000;
    -- bne $5, $0, charFromBNotNull
0648 : 00010001010000000000000000000001;
    -- jr $ra
0649 : 00100111110000000000000000000000;
    -- charFromBNotNull: nop
0650 : 00000000000000000000000000000000;
    -- nop
0651 : 00000000000000000000000000000000;
    -- nop
0652 : 00000000000000000000000000000000;
    -- nop
0653 : 00000000000000000000000000000000;
    -- nop
0654 : 00000000000000000000000000000000;
    -- nop
0655 : 00000000000000000000000000000000;
    -- nop
0656 : 00000000000000000000000000000000;
    -- nop
0657 : 00000000000000000000000000000000;
    -- nop
0658 : 00000000000000000000000000000000;
    -- lw $6, 0($1)
0659 : 01000001100000100000000000000000;
    -- nop
0660 : 00000000000000000000000000000000;
    -- nop
0661 : 00000000000000000000000000000000;
    -- nop
0662 : 00000000000000000000000000000000;
    -- nop
0663 : 00000000000000000000000000000000;
    -- nop
0664 : 00000000000000000000000000000000;
    -- nop
0665 : 00000000000000000000000000000000;
    -- nop
0666 : 00000000000000000000000000000000;
    -- nop
0667 : 00000000000000000000000000000000;
    -- addi $7, $0, 255
0668 : 00101001110000000000000011111111;
    -- addi $9, $0, 1
0669 : 00101010010000000000000000000001;
    -- blt $2, $9, needToCorrectAStartsAt0
0670 : 00110000100100100000000000000110;
    -- addi $9, $0, 2
0671 : 00101010010000000000000000000010;
    -- blt $2, $9, needToCorrectAStartsAt1
0672 : 00110000100100100000000000100001;
    -- addi $9, $0, 3
0673 : 00101010010000000000000000000011;
    -- blt $2, $9, needToCorrectAStartsAt2
0674 : 00110000100100100000000000111100;
    -- addi $9, $0, 4
0675 : 00101010010000000000000000000100;
    -- blt $2, $9, needToCorrectAStartsAt3
0676 : 00110000100100100000000001010111;
    -- needToCorrectAStartsAt0: nop
0677 : 00000000000000000000000000000000;
    -- sll $7, $7, 16
0678 : 00000001110011100000100000010000;
    -- addi $8, $0, 255
0679 : 00101010000000000000000011111111;
    -- sll $8, $8, 8
0680 : 00000010000100000000010000010000;
    -- or $7, $7, $8
0681 : 00000001110011101000000000001100;
    -- sra $8, $8, 8
0682 : 00000010000100000000010000010100;
    -- or $7, $7, $8
0683 : 00000001110011101000000000001100;
    -- and $6, $6, $7
0684 : 00000001100011000111000000001000;
    -- sll $5, $5, 24
0685 : 00000001010010100000110000010000;
    -- or $5, $5, $6
0686 : 00000001010010100110000000001100;
    -- nop
0687 : 00000000000000000000000000000000;
    -- nop
0688 : 00000000000000000000000000000000;
    -- nop
0689 : 00000000000000000000000000000000;
    -- nop
0690 : 00000000000000000000000000000000;
    -- nop
0691 : 00000000000000000000000000000000;
    -- nop
0692 : 00000000000000000000000000000000;
    -- nop
0693 : 00000000000000000000000000000000;
    -- nop
0694 : 00000000000000000000000000000000;
    -- sw $5, 0($1)
0695 : 00111001010000100000000000000000;
    -- nop
0696 : 00000000000000000000000000000000;
    -- nop
0697 : 00000000000000000000000000000000;
    -- nop
0698 : 00000000000000000000000000000000;
    -- nop
0699 : 00000000000000000000000000000000;
    -- nop
0700 : 00000000000000000000000000000000;
    -- nop
0701 : 00000000000000000000000000000000;
    -- nop
0702 : 00000000000000000000000000000000;
    -- nop
0703 : 00000000000000000000000000000000;
    -- addi $2, $2, 1
0704 : 00101000100001000000000000000001;
    -- j needToCorrectDoneLoadingA
0705 : 00001000000000000000001100011001;
    -- needToCorrectAStartsAt1: nop
0706 : 00000000000000000000000000000000;
    -- sll $7, $7, 24
0707 : 00000001110011100000110000010000;
    -- addi $8, $0, 255
0708 : 00101010000000000000000011111111;
    -- sll $8, $8, 8
0709 : 00000010000100000000010000010000;
    -- or $7, $7, $8
0710 : 00000001110011101000000000001100;
    -- sra $8, $8, 8
0711 : 00000010000100000000010000010100;
    -- or $7, $7, $8
0712 : 00000001110011101000000000001100;
    -- and $6, $6, $7
0713 : 00000001100011000111000000001000;
    -- sll $5, $5, 16
0714 : 00000001010010100000100000010000;
    -- or $5, $5, $6
0715 : 00000001010010100110000000001100;
    -- nop
0716 : 00000000000000000000000000000000;
    -- nop
0717 : 00000000000000000000000000000000;
    -- nop
0718 : 00000000000000000000000000000000;
    -- nop
0719 : 00000000000000000000000000000000;
    -- nop
0720 : 00000000000000000000000000000000;
    -- nop
0721 : 00000000000000000000000000000000;
    -- nop
0722 : 00000000000000000000000000000000;
    -- nop
0723 : 00000000000000000000000000000000;
    -- sw $5, 0($1)
0724 : 00111001010000100000000000000000;
    -- nop
0725 : 00000000000000000000000000000000;
    -- nop
0726 : 00000000000000000000000000000000;
    -- nop
0727 : 00000000000000000000000000000000;
    -- nop
0728 : 00000000000000000000000000000000;
    -- nop
0729 : 00000000000000000000000000000000;
    -- nop
0730 : 00000000000000000000000000000000;
    -- nop
0731 : 00000000000000000000000000000000;
    -- nop
0732 : 00000000000000000000000000000000;
    -- addi $2, $2, 1
0733 : 00101000100001000000000000000001;
    -- j needToCorrectDoneLoadingA
0734 : 00001000000000000000001100011001;
    -- needToCorrectAStartsAt2: nop
0735 : 00000000000000000000000000000000;
    -- sll $7, $7, 24
0736 : 00000001110011100000110000010000;
    -- addi $8, $0, 255
0737 : 00101010000000000000000011111111;
    -- sll $8, $8, 16
0738 : 00000010000100000000100000010000;
    -- or $7, $7, $8
0739 : 00000001110011101000000000001100;
    -- sra $8, $8, 16
0740 : 00000010000100000000100000010100;
    -- or $7, $7, $8
0741 : 00000001110011101000000000001100;
    -- and $6, $6, $7
0742 : 00000001100011000111000000001000;
    -- sll $5, $5, 8
0743 : 00000001010010100000010000010000;
    -- or $5, $5, $6
0744 : 00000001010010100110000000001100;
    -- nop
0745 : 00000000000000000000000000000000;
    -- nop
0746 : 00000000000000000000000000000000;
    -- nop
0747 : 00000000000000000000000000000000;
    -- nop
0748 : 00000000000000000000000000000000;
    -- nop
0749 : 00000000000000000000000000000000;
    -- nop
0750 : 00000000000000000000000000000000;
    -- nop
0751 : 00000000000000000000000000000000;
    -- nop
0752 : 00000000000000000000000000000000;
    -- sw $5, 0($1)
0753 : 00111001010000100000000000000000;
    -- nop
0754 : 00000000000000000000000000000000;
    -- nop
0755 : 00000000000000000000000000000000;
    -- nop
0756 : 00000000000000000000000000000000;
    -- nop
0757 : 00000000000000000000000000000000;
    -- nop
0758 : 00000000000000000000000000000000;
    -- nop
0759 : 00000000000000000000000000000000;
    -- nop
0760 : 00000000000000000000000000000000;
    -- nop
0761 : 00000000000000000000000000000000;
    -- addi $2, $2, 1
0762 : 00101000100001000000000000000001;
    -- j needToCorrectDoneLoadingA
0763 : 00001000000000000000001100011001;
    -- needToCorrectAStartsAt3: nop
0764 : 00000000000000000000000000000000;
    -- sll $7, $7, 24
0765 : 00000001110011100000110000010000;
    -- addi $8, $0, 255
0766 : 00101010000000000000000011111111;
    -- sll $8, $8, 16
0767 : 00000010000100000000100000010000;
    -- or $7, $7, $8
0768 : 00000001110011101000000000001100;
    -- sra $8, $8, 8
0769 : 00000010000100000000010000010100;
    -- or $7, $7, $8
0770 : 00000001110011101000000000001100;
    -- and $6, $6, $7
0771 : 00000001100011000111000000001000;
    -- sll $5, $5, 8
0772 : 00000001010010100000010000010000;
    -- or $5, $5, $6
0773 : 00000001010010100110000000001100;
    -- nop
0774 : 00000000000000000000000000000000;
    -- nop
0775 : 00000000000000000000000000000000;
    -- nop
0776 : 00000000000000000000000000000000;
    -- nop
0777 : 00000000000000000000000000000000;
    -- nop
0778 : 00000000000000000000000000000000;
    -- nop
0779 : 00000000000000000000000000000000;
    -- nop
0780 : 00000000000000000000000000000000;
    -- nop
0781 : 00000000000000000000000000000000;
    -- sw $5, 0($1)
0782 : 00111001010000100000000000000000;
    -- nop
0783 : 00000000000000000000000000000000;
    -- nop
0784 : 00000000000000000000000000000000;
    -- nop
0785 : 00000000000000000000000000000000;
    -- nop
0786 : 00000000000000000000000000000000;
    -- nop
0787 : 00000000000000000000000000000000;
    -- nop
0788 : 00000000000000000000000000000000;
    -- nop
0789 : 00000000000000000000000000000000;
    -- nop
0790 : 00000000000000000000000000000000;
    -- addi $1, $1, 1
0791 : 00101000010000100000000000000001;
    -- addi $2, $0, 0
0792 : 00101000100000000000000000000000;
    -- needToCorrectDoneLoadingA: nop
0793 : 00000000000000000000000000000000;
    -- j needToCorrectStart
0794 : 00001000000000000000001001010001;
[0795 .. 4095] : 00000000000000000000000000000000;
END;
